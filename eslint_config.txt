const typescriptEslint = require("@typescript-eslint/eslint-plugin");
const importPlugin = require("eslint-plugin-import");
const jest = require("eslint-plugin-jest");
const globals = require("globals");
const tsParser = require("@typescript-eslint/parser");
const stylisticTs = require("@stylistic/eslint-plugin-ts");

module.exports = [
	importPlugin.flatConfigs.recommended,
	{
		plugins: {
			"@typescript-eslint": typescriptEslint,
			"@stylistic/ts": stylisticTs,
			jest,
		},

		languageOptions: {
			globals: {
				...globals.browser,
				...globals.jest,
				...globals.jasmine,
			},
			parser: tsParser,
		},

		rules: {
			"@stylistic/ts/quotes": ["error", "double"],
			"@stylistic/ts/semi": ["error"],
			"@stylistic/ts/type-annotation-spacing": ["error"],
			"@stylistic/ts/member-delimiter-style": ["error", {
				multiline: {
					delimiter: "semi",
					requireLast: true,
				},
				singleline: {
					delimiter: "semi",
					requireLast: false,
				},
				overrides: {
					interface: {
						singleline: {
							delimiter: "semi",
							requireLast: true,
						},

						multiline: {
							delimiter: "semi",
							requireLast: true,
						},
					},
				},
			}],
			"@stylistic/ts/indent": ["error", "tab", {
				FunctionDeclaration: {
					parameters: "first",
				},
				FunctionExpression: {
					parameters: "first",
				},
				SwitchCase: 1,
				flatTernaryExpressions: true,
				ignoredNodes: ["ConditionalExpression"],
			}],
			"@typescript-eslint/naming-convention": ["error", {
				selector: "variable",
				format: ["camelCase", "UPPER_CASE"],

				filter: {
					regex: "^_",
					match: false,
				},
			}, {
					selector: "typeLike",
					format: ["PascalCase"],
			}],
			"@typescript-eslint/interface-name-prefix": "off",
			"@typescript-eslint/member-ordering": ["error", {
				default: [
					"public-static-field",
					"public-instance-field",
					"private-instance-field",
					"public-static-method",
					"public-constructor",
					"public-instance-method",
					"private-instance-method",
				],
			}],
			"@typescript-eslint/no-empty-function": "error",
			"@typescript-eslint/parameter-properties": "error",
			"@typescript-eslint/no-var-requires": "error",
			"@typescript-eslint/typedef": ["error", {
				propertyDeclaration: true,
				memberVariableDeclaration: true,
				parameter: true,
				arrowParameter: false,
			}],
			"@typescript-eslint/explicit-function-return-type": ["error", {
				allowExpressions: true,
				allowTypedFunctionExpressions: true,
			}],
			"@typescript-eslint/no-unused-vars": ["error", {
				vars: "all",
				args: "all",
				argsIgnorePattern: "^_",
				caughtErrorsIgnorePattern: "^_"
			}],
			"@typescript-eslint/consistent-type-imports": "error",
			"@typescript-eslint/no-floating-promises": "error",
			camelcase: "off",
			curly: "off",
			"dot-notation": "error",
			"eol-last": "error",
			eqeqeq: ["error", "smart"],
			"guard-for-in": "error",
			"id-blacklist": "off",
			"id-match": "off",
			"max-len": ["error", {
				code: 140,
			}],
			"no-bitwise": "off",
			"no-caller": "error",
			"no-console": ["error", {
				allow: [
					"log",
					"warn",
					"dir",
					"timeLog",
					"assert",
					"clear",
					"count",
					"countReset",
					"group",
					"groupEnd",
					"table",
					"dirxml",
					"error",
					"groupCollapsed",
					"Console",
					"profile",
					"profileEnd",
					"timeStamp",
					"context",
				],
			}],
			"no-debugger": "error",
			"no-empty": "error",
			"no-eval": "error",
			"no-fallthrough": "error",
			"no-new-wrappers": "error",
			"no-redeclare": "off",
			"no-trailing-spaces": "error",
			"comma-spacing": "error",
			"brace-style": "error",
			"no-underscore-dangle": "off",
			"no-unused-vars": "off",
			"no-unused-expressions": "error",
			"no-unused-labels": "error",
			"no-var": "error",
			"prefer-const": "error",
			radix: "error",
			"spaced-comment": ["error", "always", {
				markers: ["/"],
			}],
			"keyword-spacing": ["error"],
			"import/order": ["error", {
				alphabetize: {
					order: "asc",
					caseInsensitive: true
				}
			}],
			"import/no-unresolved": "off"
		}
	}
];
const customConfig = require("./index.js");

module.exports = [
    ...customConfig,
    {
        files: ["**/*.{js,mjs,cjs,ts}"],
        languageOptions: {
            ecmaVersion: 6,
            parserOptions: {
                sourceType: "module",
                project: ["tsconfig.json"],
            }
        }
    }
];
# eslint-config
akashic-games リポジトリで共通的に利用する eslint プリセットです。
使用側は TypeScript が必要となります。

## 使い方
### インストール
package.json の devDependencies に下記が必要です。
```sh
npm install --save-dev @akashic/eslint-config
```

### 設定ファイルの書き方
プロジェクトのルートディレクトリに `eslint.config.js` を配置します。

`eslint.config.js` に以下のように記載します。
```js
const eslintConfig = require("@akashic/eslint-config");

module.exports = [
    ...eslintConfig,
    {
        files: ["**/*.ts"],
        languageOptions: {
            sourceType: "module",
            parserOptions: {
                project: "tsconfig.json",
            }
        }
    }
];
```

### 実行方法
```sh
eslint src/**/*.ts --fix
```

## ライセンス
本リポジトリは MIT License の元で公開されています。
詳しくは [LICENSE](https://github.com/akashic-games/remark-preset-lint/blob/master/LICENSE) をご覧ください。

ただし、画像ファイルおよび音声ファイルは
[CC BY 2.1 JP](https://creativecommons.org/licenses/by/2.1/jp/) の元で公開されています。
{
  "name": "@akashic/eslint-config",
  "version": "3.0.1",
  "description": "akashic-gamesリポジトリで共通的に利用するeslintのプリセットです。",
  "main": "index.js",
  "scripts": {
    "test": "eslint \"test/*.ts\""
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/akashic-games/eslint-config.git"
  },
  "author": "DWANGO Co., Ltd.",
  "license": "MIT",
  "publishConfig": {
    "@akashic:registry": "https://registry.npmjs.org/"
  },
  "files": [
    "index.js"
  ],
  "dependencies": {
    "@stylistic/eslint-plugin-ts": "^2.9.0",
    "@typescript-eslint/parser": "^8.21.0",
    "eslint": "^9.18.0",
    "typescript": "^5.5.4"
  },
  "devDependencies": {
    "@typescript-eslint/eslint-plugin": "^8.21.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^28.0.0",
    "globals": "^16.0.0"
  },
  "peerDependencies": {
    "@typescript-eslint/eslint-plugin": "^8.21.0",
    "eslint": "^9.18.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jest": "^28.0.0",
    "globals": "^16.0.0"
  }
}
